---
title: "Chapter 11"
author: Leonhard Reiter
format: 
  html:
    theme: cosmo
    html-table-processing: none
    html-math-method: katex
    self-contained: true
    toc: true
    toc-depth: 3
editor_options: 
  chunk_output_type: console
editor: 
  markdown: 
    wrap: 72
---

### Stuff from R4DS 2nd Edition

```{r}
library(tidyverse)
library(ThemePark)
theme_set(theme_bw() +
            theme(
              panel.grid = element_blank(),
              plot.title.position = "plot"
            ))

diamonds |> 
  ggplot(aes(carat)) +
  geom_histogram(binwidth = .5, fill = "grey50")

diamonds |> 
  filter(carat < 3) |> 
  ggplot(aes(carat)) +
  geom_histogram(binwidth = .01, fill = "grey50")

diamonds |> 
  ggplot(aes(x = y)) +
  geom_histogram(binwidth = .5, fill = "grey50") +
  coord_cartesian(ylim = c(0,50))

nycflights13::flights |> 
  mutate(
    cancelled = is.na(dep_time),
    sched_hour = sched_dep_time %/% 100,
    sched_min = sched_dep_time %% 100,
    sched_dep_time = sched_hour + (sched_min / 60)
  ) |> 
  ggplot(aes(x = sched_dep_time)) + 
  geom_freqpoly(aes(color = cancelled), binwidth = 1/4) +
  facet_grid(~cancelled)

ggplot(diamonds, aes(x = price, y = after_stat(density))) + 
  geom_freqpoly(aes(color = cut), binwidth = 500, linewidth = 0.75) + theme_grey()

ggplot(mpg, aes(x = fct_reorder(class, hwy, median), y = hwy)) +
  geom_boxplot()

diamonds |> 
  count(color, cut) |>  
  ggplot(aes(x = color, y = cut)) +
  geom_tile(aes(fill = n)) + scale_fill_barbie() + theme_barbie()

smaller <- diamonds |> filter(carat < 3)
ggplot(smaller, aes(x = carat, y = price)) +
  geom_bin2d() + scale_fill_barbie() + theme_barbie()

# install.packages("hexbin")
ggplot(smaller, aes(x = carat, y = price)) +
  geom_hex() + scale_fill_barbie() + theme_barbie()

library(tidymodels)

diamonds <- diamonds |>
  mutate(
    log_price = log(price),
    log_carat = log(carat)
  )

diamonds_fit <- linear_reg(engine = "stan") |>
  fit(log_price ~ log_carat, data = diamonds)

diamonds_aug <- augment(diamonds_fit, new_data = diamonds) |>
  mutate(.resid = exp(.resid))

ggplot(diamonds_aug, aes(x = carat, y = .resid)) + 
  geom_point()
```

# Lets go

```{r}
library(arrow)
library(janitor)
library(knitr)
library(lubridate)
library(mice)
library(modelsummary)
library(naniar)
library(opendatatoronto)
config_modelsummary(factory_default = 'tinytable')
```

## State
```{r}
us_populations <- 
  state.x77 |> 
  as_tibble() |> 
  clean_names() |> 
  mutate(state = rownames(state.x77)) |> 
    select(state, population, income)

us_populations
head(us_populations); tail(us_populations)
slice_sample(us_populations, n = 6)

us_populations |>
  glimpse()

summary(us_populations)
```

```{r}
sample_means <- tibble(seed = c(),
                       mean = c(),
                       states_ignored = c())
for (i in c(1:5)) {
  set.seed(i)
  dont_get <- c(sample(x = state.name, size = 5))
  sample_means <- 
  sample_means |> 
    rbind(tibble(
      seed = i,
      mean = 
        us_populations |> 
        filter(!state %in% dont_get) |> 
        summarise(mean = mean(population)) |> 
        pull(),
      states_ignored = str_c(dont_get, collapse = ", ")
    ))
}

sample_means |>
  kable(
    col.names = c("Seed", "Mean", "Ignored states"),
    digits = 0,
    format.args = list(big.mark = ","),
    booktabs = TRUE
  )
```

#### MCAR

```{r}
set.seed(999)

remove_random_states <- 
  sample(x = state.name, size = 3, replace = F)

us_states_MCAR <- 
  us_populations |> 
  mutate(
    population =
      if_else(state %in% remove_random_states, NA_real_, population)
  )


summary(us_states_MCAR)
```

#### MAR

```{r}
highest_income <- 
  us_populations |> 
  slice_max(income, n = 3) |> 
  pull(state)

us_states_MAR <- 
  us_populations |> 
  mutate(
    population = 
      if_else(state %in% highest_income, NA_real_, population)
  )

summary(us_states_MAR)
```


#### MNAR

```{r}
highest_population_states <-
  us_populations |>
  slice_max(population, n = 3) |>
  pull(state)

us_states_MNAR <-
  us_populations |>
  mutate(population =
           if_else(state %in% highest_population_states,
                   NA_real_,
                   population))

us_states_MNAR

multiple_imputation <-
  mice(
    us_states_MCAR,
    print = FALSE
  )

mice_estimates <-
  complete(multiple_imputation) |>
  as_tibble()

mice_estimates
```

## TTC subway delays

```{r}
all_2021_ttc_data <-
  list_package_resources("996cfe8d-fb35-40ce-b569-698d51fc683b") |>
  filter(name == "ttc-subway-delay-data-2021") |>
  get_resource() |>
  bind_rows() |>
  clean_names()

write_csv(all_2021_ttc_data, "all_2021_ttc_data.csv")

all_2021_ttc_data
```

